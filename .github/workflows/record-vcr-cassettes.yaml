name: Record and push VCR cassettes

on:
    workflow_dispatch  # run on request (no need for PR)

env:
  # Login details for the Geti instance to run the tests against
  # Secrets are configured on repository level (Settings > Secrets)
  GETI_HOST: ${{ secrets.GETI_HOST }}
  GETI_USERNAME: ${{ secrets.GETI_USERNAME }}
  GETI_PASSWORD: ${{ secrets.GETI_PASSWORD }}

  # Other environment variables used in the tests
  TEST_MODE: "RECORD"
  REPORT_DIRECTORY: reports

  # Python environment
  PYTHON_VERSION: 3.9

permissions:
  contents: write
  pull-requests: write  # 'write' access to pull requests

jobs:
  integration_tests:
    runs-on: [self-hosted, sdk-runner]

    steps:

      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout code with caching for Git LFS
        uses: nschloe/action-cached-lfs-checkout@b45b5731560fe7acf2d15c536bc8aef4f71c885e # v1.2.0

      - name: Create fresh conda environment
        # Steps: check if env named $CONDA_ENV exists, if so remove it. Create new env
        # using python version $PYTHON_VERSION
        run: |
          eval "$(conda shell.bash hook)"

          conda info --envs > temp_envs.txt

          if grep --quiet $CONDA_ENV temp_envs.txt; then
          echo Conda environment $CONDA_ENV exists, removing for clean start
          conda remove -y --name $CONDA_ENV --all
          fi

          rm temp_envs.txt

          conda create -y -n $CONDA_ENV python=$PYTHON_VERSION


      - name: Install package with dev requirements
        # Steps: Activate conda env, upgrade pip, install SDK
        run: |
          eval "$(conda shell.bash hook)"
          conda activate $CONDA_ENV
          python -m pip install --upgrade pip
          pip install ".[dev]"

      - name: Create artifact directories
        # Creates the temporary directories that are used to store the test
        # artifacts and reports
        run: |
          mkdir $REPORT_DIRECTORY

      - name: Record integration test cassettes
        # Proxy settings have to be configured and GETI_HOST set to full address before
        # tests can run
        #
        # NOTE: This step executes all tests in the `tests` directory in `ONLINE` mode
        run: |
          export no_proxy=$GETI_HOST,$no_proxy
          export NO_PROXY=$GETI_HOST,$NO_PROXY
          export GETI_HOST=https://$GETI_HOST

          eval "$(conda shell.bash hook)"
          conda activate $CONDA_ENV

          pytest tests/pre-merge/integration --html=$REPORT_DIRECTORY/integration_test_report.html --self-contained-html

      - name: Commit files
        run: |
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit -a -m "Update VCR cassettes"

      - name: Push changes
        uses: ad-m/github-push-action@9870d48124da805820c70ebc6ba563c715551019 # master
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.ref }}

      - name: Upload test reports
        # Publish the test reports to github
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        if: ${{ always() }}
        with:
          name: test-reports
          path: ${{ env.REPORT_DIRECTORY }}

      - name: Clean up artifact directories
        # Remove temporary report directory
        if: ${{ always() }}
        run: |
          rm -r $REPORT_DIRECTORY
